//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Model
{
    using Client;
    using Server;
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;

    public class Game
	{

        private List<Card> gameCards;

		private object RoomID
		{
			get;
			set;
		}

		private List <User> Users
		{
			get;
			set;
		}

		private User Judge
		{
			get;
			set;
		}

		private Dictionary <User, List<Card>> Cards
		{
            get;
			set;
		}

		public virtual Room Room
		{
			get;
			set;
		}

		public virtual Card Card
		{
			get;
			set;
		}

		public virtual IEnumerable<User> User
		{
			get;
			set;
		}

		public virtual bool registerUser(ClientUser User, string AuthID)
		{
			throw new System.NotImplementedException();
		}

		public virtual bool assignGameRoom(ClientUser User)
		{
			throw new System.NotImplementedException();
		}

		public virtual List<Game> findEmptyGames()
		{
			throw new System.NotImplementedException();
		}

		public virtual bool fetchAuthKey(ClientUser User, string AuthKey)
		{
			throw new System.NotImplementedException();
		}

		public virtual List<Card> fetchGameCards(ClientUser User)
		{
			throw new System.NotImplementedException();
		}

        public void assignCards(User user) {
            Cards[user] = loadRandomCards();
        }

        public List<Card> loadRandomCards() {
            Random n = new Random();
            List<Card> temp = new List<Card>();
            for (int i = 0; i < 5; i++) {
                var abc = gameCards.Select(x => x.CardID == n.Next(0, gameCards.Count - 1));
                var a = abc;
            }
                temp.Add(gameCards.Select<Card>( x =>  x.CardID = n.Next(0, gameCards.Count - 1) ).ToList()[0];
            return temp;
        }

        public void loadCards() {
            this.gameCards = new List<Card>();
        }
	}
}

